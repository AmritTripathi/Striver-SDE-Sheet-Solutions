Node* solve(Node *head, int i,  int n, int b[])
{
    while(b[i]==0 && i<n) i++;
    if(head == NULL) return NULL;
    if(i==n) return head;
    Node* prev = NULL;
    Node* temp = head;
    Node* last = NULL;
    int cnt=0;
    while(temp!=NULL && cnt<b[i])
    {
        last = temp->next;
        temp->next = prev;
        prev = temp;
        temp = last;
        cnt++;
    }
    
    if(temp!=NULL) head->next = solve(temp, i+1, n, b);
    return prev;
}

Node *getListAfterReverseOperation(Node *head, int n, int b[]){
	if(head==NULL) return head;
    Node* ans = solve(head, 0, n, b);
    return ans;
}