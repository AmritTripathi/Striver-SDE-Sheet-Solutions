Node* merge(Node* left, Node* right)
{
    if(left==NULL) return right;
    if(right==NULL) return left;
    
    Node* ans = new Node(-1);
    Node* temp = ans;
    while(left!=NULL && right!=NULL)
    {
        if(left->data<right->data)
        {
            temp->child = left;
            temp = left;
            left = left->child;
        }
        else
        {
            temp->child = right;
            temp = right;
            right = right->child;
        }
    }
    
    if(left!=NULL) temp->child = left;
    if(right!=NULL) temp->child = right;
    
    return ans->child;
}
Node* flattenLinkedList(Node* head) 
{
	if(head==NULL) return head;
    
    Node* left = head;
    Node* right = flattenLinkedList(head->next);
    head->next = NULL;
    return merge(left, right);
}