bool isValidParenthesis(string expression)
{
    if(expression.length()%2) return false;
    stack<char> s;
    for(int i=0; i<expression.length(); i++)
    {
        if(expression[i]=='{'||expression[i]=='('||expression[i]=='[') s.push(expression[i]);
        else if(expression[i]=='}' && (s.empty()||s.top()!='{')) return false;
        else if(expression[i]==')' && (s.empty()||s.top()!='(')) return false;
        else if(expression[i]==']' && (s.empty()||s.top()!='[')) return false;
        else s.pop();
    }
    if(s.empty()) return true;
    return false;
}